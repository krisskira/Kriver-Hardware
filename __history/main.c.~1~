#include "header/config.h"
#include <string.h>
#include <math.h>
#include <lcd.c>
#include "header/sound.h"
#include "header/func_menu_setup.h"
#include "header/menu.h"


/** VARIABLES GLOBALS **/

// Menu seleccionado, Inicia en el menuStart(0)
int menuActive = 0;
// Flag usada para almacenar las respuestas de las opciones de menu
int optSelect  = 0;

/** INTERRUPCIONES **/

//@hint: se dispara cuando se detectan datos de llegada al puerto serie portWF
/*
#INT_RDA
void  RDA_isr(void) 
{

}*/

/** INIT **/

   void main()
   {
      // Activa las resistencias de Pull-Up y configura el puerto
      port_b_pullups(0b00110000);
      set_tris_b(0b00110010);
      
      // Inicializa la lcd
      lcd_init();
      
      //Estabiliza el inicio del programa
      delay_ms(1000);
      
      // Ciclo infinito para mantener el programa activo
      while(1)
      {
         switch(menuActive){
            // Menu principal
            case MENU_START:
               menuActive = getMenuStart();
               break;
 
            case MENU_ON:
               menuActive = getMenuOn();
               break;
 
            case MENU_OFF:
               menuActive = getMenuOff();
               break;

            case MENU_SETUP:
               menuActive = getMenuSetup();
               break;
         } // Fin del Switch(menuActive)
         
      } // End loop while -> true
   } // Fin del main
=======
#include "header/config.h"
#include "header/sound.h"
#include "header/menu.h"
#include <string.h>
#include <math.h>
#include <lcd.c>
#define BEEP  Sound(1209,20)

/** VARIABLES GLOBALS **/

// Contador de las posiciones del menu
int posMenu    = 0;
// Primera opcion del menu seleccionado
int menuActive = 1;
int menuSelected = 1;
/** VARIABLES GENERALS **/ 

// Retardo de inicializacion
int16 timeWait = 1000;

/** INTERRUPCIONES **/

//@hint: se dispara cuando se detectan datos de llegada al puerto serie portWF
/*
#INT_RDA
void  RDA_isr(void) 
{

}*/

/** INIT **/

   void main()
   {
      // Activa las resistencias de Pull-Up y configura el puerto
      port_b_pullups(0b00110000);
      set_tris_b(0b00110010);
      
      // Inicializa la lcd y muestra la primera opcion del menu principal
      lcd_init();
      printf(lcd_putc, "\f%s",optMenuStart[0]);
      
      //Estabiliza el inicio del programa
      delay_ms(timeWait);
      
      //PlayCancion();

      // Ciclo infinito para mantener el programa activo
      while(1)
      {
         // TECLA SIGUIENTE
         if(input(KEY_NEXT)==0)
         { 
            // Elimina el rebote
            delay_ms(500);
            BEEP;
            
            posMenu++;
            switch(menuActive){
               // Menu principal
               case 0:
                  if(countOptMenuStart == posMenu){
                     posMenu     = 0;
                     menuActive  = 1;
                  }
                  printf(lcd_putc, "\f%s",optMenuStart[posMenu]);
                  break;
               // Menu Configuracion
               case 1:
                  if(countOptMenuSetup == posMenu){
                     posMenu = 0;
                  }
                  printf(lcd_putc, "\f%s",optMenuSetup[posMenu]);
                  break;
               // Menu Encender
               case 2:
                  if(countOptMenuOn == posMenu){
                     posMenu = 0;
                  }
                  printf(lcd_putc, "\f%s",optMenuOn[posMenu]);
                  
                  break;
               // Menu Apagar
               case 3:
                  if(countOptMenuOff == posMenu){
                     posMenu = 0;
                  }
                  printf(lcd_putc, "\f%s",optMenuOff[posMenu]);
                  break;
            } // Fin del Switch(menuActive)
         } // Fin del if(KEY_NEXT)

         // TECLA OK
         if(input(KEY_OK)==0)
         { 
            // Elimina el rebote
            delay_ms(500);
            BEEP;
            
            // Selecciona la opcion del menu dependiendo del menu que se encuen
            // tre seleccionado
            menuSelected = posMenu+1;
            posMenu = 0;
            menuActive++;
            if(menuActive>3){
               menuActive = 0;
            }
            
            // Muestra la primera opcion del menu seleccionado, o el submenu 
            switch(menuSelected){
               // Menu Principal
               case 0:
                  printf(lcd_putc, "\f%s",optMenuStart[posMenu]);
                  break;
               // Menu Configuracion
               case 1:
                  printf(lcd_putc, "\f%s",optMenuSetup[posMenu]);
                  break;
               // Menu Encender
               case 2:
                  printf(lcd_putc, "\f%s",optMenuOn[posMenu]);
                  break;
               // Menu Apagar
               case 3:
                  printf(lcd_putc, "\f%s",optMenuOff[posMenu]);
                  break;
            } // Fin del switch(menuActive)
         } // Fin del if(KEY_OK)
         //output_high(LCD_LIGHT_PIN);
      } // End loop while -> true
      
   } // Fin del main
>>>>>>> 46fdb59769e5903bcb98c342c4d65b2b840b8d66
